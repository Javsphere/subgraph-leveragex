version: "3"

services:
  graph-node:
    image: graphprotocol/graph-node:${GRAPH_NODE_TAG}
    ports:
      - 8000:8000
      - 8001:8001
      - 8020:8020
      - 8030:8030
    environment:
      ipfs: ipfs:5001
      node_role: combined-node
      node_id: localhost
      GRAPH_NODE_CONFIG: ./config/${GRAPH_NODE_CONFIG}
      GRAPH_LOG: ${GRAPH_NODE_LOG_LEVEL:-info}
    restart: on-failure:3
    healthcheck:
      test: timeout 3s bash -c ':> /dev/tcp/127.0.0.1/8000' || exit 1
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - ./data/graph-node/config:/config
    networks:
      - graph
    depends_on:
      postgres:
        condition: service_healthy
      ipfs:
        condition: service_healthy

  postgres:
    image: postgres:${POSTGRES_TAG}
    ports:
      - ${POSTGRES_MASTER_PORT:-5432}:5432
    command: [postgres, -cshared_preload_libraries=pg_stat_statements]
    environment:
      POSTGRES_USER: graph
      POSTGRES_PASSWORD: graph
      POSTGRES_DB: graph
    restart: on-failure:3
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    networks:
      - graph
    healthcheck:
      test: pg_isready -U graph -d graph
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 10

  ipfs:
    image: ipfs/kubo:${IPFS_TAG}
    ports:
      - ${IPFS_PORT:-5001}:5001
    restart: on-failure:3
    volumes:
      - ./data/ipfs:/data/ipfs
    networks:
      - graph

networks:
  graph:
    driver: bridge

volumes:
  postgres:
  ipfs:
